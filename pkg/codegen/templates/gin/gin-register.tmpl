// GinServerOptions provides options for the Gin server.
type GinServerOptions struct {
    BaseURL string
    Middlewares []MiddlewareFunc
    ErrorHandler func(*gin.Context, error, int)
}

// RegisterHandlers creates http.Handler with routing matching OpenAPI spec.
func RegisterHandlers(router gin.IRouter, si ServerInterface) {
  RegisterHandlersWithOptions(router, si, GinServerOptions{})
}

// RegisterHandlersWithOptions creates http.Handler with additional options
func RegisterHandlersWithOptions(router gin.IRouter, si ServerInterface, options GinServerOptions) {
    {{- if . -}}
    errorHandler := options.ErrorHandler
    if errorHandler == nil {
        errorHandler = func(c *gin.Context, err error, statusCode int) {
            c.JSON(statusCode, gin.H{"msg": err.Error()})
        }
    }

    wrapper := ServerInterfaceWrapper{
        Handler: si,
        HandlerMiddlewares: options.Middlewares,
        ErrorHandler: errorHandler,
    }
    {{end}}

    {{range . -}}
    router.{{.Method }}(options.BaseURL+"{{.Path | swaggerUriToGinUri }}", wrapper.{{.OperationId}})
    {{end -}}
}
