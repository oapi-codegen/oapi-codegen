// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.0.0-00010101000000-000000000000 DO NOT EDIT.
package api

import (
	"encoding/json"

	"github.com/oapi-codegen/runtime"
)

// Example defines model for example.
type Example struct {
	Value *string `json:"value,omitempty"`
}

// OneOfExample defines model for oneOfExample.
type OneOfExample struct {
	union json.RawMessage
}

// OneOfExample1 defines model for .
type OneOfExample1 = int

// Reusableresponse defines model for reusableresponse.
type Reusableresponse = Example

// MultipleRequestAndResponseTypesTextBody defines parameters for MultipleRequestAndResponseTypes.
type MultipleRequestAndResponseTypesTextBody = string

// TextExampleTextBody defines parameters for TextExample.
type TextExampleTextBody = string

// HeadersExampleParams defines parameters for HeadersExample.
type HeadersExampleParams struct {
	Header1 string `json:"header1"`
	Header2 *int   `json:"header2,omitempty"`
}

// JSONExampleJSONRequestBody defines body for JSONExample for application/json ContentType.
type JSONExampleJSONRequestBody = Example

// MultipartExampleMultipartRequestBody defines body for MultipartExample for multipart/form-data ContentType.
type MultipartExampleMultipartRequestBody = Example

// MultipartRelatedExampleMultipartRequestBody defines body for MultipartRelatedExample for multipart/related ContentType.
type MultipartRelatedExampleMultipartRequestBody = Example

// MultipleRequestAndResponseTypesJSONRequestBody defines body for MultipleRequestAndResponseTypes for application/json ContentType.
type MultipleRequestAndResponseTypesJSONRequestBody = Example

// MultipleRequestAndResponseTypesFormdataRequestBody defines body for MultipleRequestAndResponseTypes for application/x-www-form-urlencoded ContentType.
type MultipleRequestAndResponseTypesFormdataRequestBody = Example

// MultipleRequestAndResponseTypesMultipartRequestBody defines body for MultipleRequestAndResponseTypes for multipart/form-data ContentType.
type MultipleRequestAndResponseTypesMultipartRequestBody = Example

// MultipleRequestAndResponseTypesTextRequestBody defines body for MultipleRequestAndResponseTypes for text/plain ContentType.
type MultipleRequestAndResponseTypesTextRequestBody = MultipleRequestAndResponseTypesTextBody

// ReusableResponsesJSONRequestBody defines body for ReusableResponses for application/json ContentType.
type ReusableResponsesJSONRequestBody = Example

// TextExampleTextRequestBody defines body for TextExample for text/plain ContentType.
type TextExampleTextRequestBody = TextExampleTextBody

// URLEncodedExampleFormdataRequestBody defines body for URLEncodedExample for application/x-www-form-urlencoded ContentType.
type URLEncodedExampleFormdataRequestBody = Example

// HeadersExampleJSONRequestBody defines body for HeadersExample for application/json ContentType.
type HeadersExampleJSONRequestBody = Example

// UnionExampleJSONRequestBody defines body for UnionExample for application/json ContentType.
type UnionExampleJSONRequestBody = Example

// UnionInRefExampleJSONRequestBody defines body for UnionInRefExample for application/json ContentType.
type UnionInRefExampleJSONRequestBody = Example

// AsExample returns the union data inside the OneOfExample as a Example
func (t OneOfExample) AsExample() (Example, error) {
	var body Example
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromExample overwrites any union data inside the OneOfExample as the provided Example
func (t *OneOfExample) FromExample(v Example) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeExample performs a merge with any union data inside the OneOfExample, using the provided Example
func (t *OneOfExample) MergeExample(v Example) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsOneOfExample1 returns the union data inside the OneOfExample as a OneOfExample1
func (t OneOfExample) AsOneOfExample1() (OneOfExample1, error) {
	var body OneOfExample1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromOneOfExample1 overwrites any union data inside the OneOfExample as the provided OneOfExample1
func (t *OneOfExample) FromOneOfExample1(v OneOfExample1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeOneOfExample1 performs a merge with any union data inside the OneOfExample, using the provided OneOfExample1
func (t *OneOfExample) MergeOneOfExample1(v OneOfExample1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t OneOfExample) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *OneOfExample) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
