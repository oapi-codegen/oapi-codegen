// Package serverurls provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.0.0-00010101000000-000000000000 DO NOT EDIT.
package serverurls

import (
	"fmt"
	"strings"
)

// ServerUrlDevelopmentServer defines the Server URL for Development server
const ServerUrlDevelopmentServer = "https://development.gigantic-server.com/v1"

// ServerUrlDevelopmentServer1 defines the Server URL for Development server
const ServerUrlDevelopmentServer1 = "http://localhost:80"

// ServerUrlDevelopmentServer2 defines the Server URL for Development server
const ServerUrlDevelopmentServer2 = "http://localhost:80"

// ServerUrlHttplocalhost443 defines the Server URL for
const ServerUrlHttplocalhost443 = "http://localhost:443"

// ServerUrlProductionServer defines the Server URL for Production server
const ServerUrlProductionServer = "https://api.gigantic-server.com/v1"

// ServerUrlSomeLowercaseName defines the Server URL for some lowercase name
const ServerUrlSomeLowercaseName = "http://localhost:80"

// ServerUrlStagingServer defines the Server URL for Staging server
const ServerUrlStagingServer = "https://staging.gigantic-server.com/v1"

// ServerUrlTheProductionAPIServerBasePathVariable is the `basePath` variable for ServerUrlTheProductionAPIServer
type ServerUrlTheProductionAPIServerBasePathVariable string

// ServerUrlTheProductionAPIServerBasePathVariableDefault is the default value for the `basePath` variable for ServerUrlTheProductionAPIServer
const ServerUrlTheProductionAPIServerBasePathVariableDefault = "v2"

// ServerUrlTheProductionAPIServerNoDefaultVariable is the `noDefault` variable for ServerUrlTheProductionAPIServer
type ServerUrlTheProductionAPIServerNoDefaultVariable string

// ServerUrlTheProductionAPIServerPortVariable is the `port` variable for ServerUrlTheProductionAPIServer
type ServerUrlTheProductionAPIServerPortVariable string

// ServerUrlTheProductionAPIServerPortVariable8443 is one of the accepted values for the `port` variable for ServerUrlTheProductionAPIServer
const ServerUrlTheProductionAPIServerPortVariable8443 ServerUrlTheProductionAPIServerPortVariable = "8443"

// ServerUrlTheProductionAPIServerPortVariable443 is one of the accepted values for the `port` variable for ServerUrlTheProductionAPIServer
const ServerUrlTheProductionAPIServerPortVariable443 ServerUrlTheProductionAPIServerPortVariable = "443"

// ServerUrlTheProductionAPIServerPortVariableDefault is the default choice, for the accepted values for the `port` variable for ServerUrlTheProductionAPIServer
const ServerUrlTheProductionAPIServerPortVariableDefault ServerUrlTheProductionAPIServerPortVariable = ServerUrlTheProductionAPIServerPortVariable8443

// ServerUrlTheProductionAPIServerUsernameVariable is the `username` variable for ServerUrlTheProductionAPIServer
type ServerUrlTheProductionAPIServerUsernameVariable string

// ServerUrlTheProductionAPIServerUsernameVariableDefault is the default value for the `username` variable for ServerUrlTheProductionAPIServer
const ServerUrlTheProductionAPIServerUsernameVariableDefault = "demo"

// NewServerUrlTheProductionAPIServer constructs the Server URL for The production API server, with the provided variables.
func NewServerUrlTheProductionAPIServer(basePath ServerUrlTheProductionAPIServerBasePathVariable, noDefault ServerUrlTheProductionAPIServerNoDefaultVariable, port ServerUrlTheProductionAPIServerPortVariable, username ServerUrlTheProductionAPIServerUsernameVariable) (string, error) {
	u := "https://{username}.gigantic-server.com:{port}/{basePath}"

	u = strings.ReplaceAll(u, "{basePath}", string(basePath))
	u = strings.ReplaceAll(u, "{noDefault}", string(noDefault))
	// TODO in the future, this will validate that the value is part of the ServerUrlTheProductionAPIServerPortVariable enum
	u = strings.ReplaceAll(u, "{port}", string(port))
	u = strings.ReplaceAll(u, "{username}", string(username))

	if strings.Contains(u, "{") || strings.Contains(u, "}") {
		return "", fmt.Errorf("after mapping variables, there were still `{` or `}` characters in the string: %#v", u)
	}

	return u, nil
}
